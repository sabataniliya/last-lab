public abstract class Animal {
    protected int legs;
     public Animal(){
         this.legs=legs;
     }
     public  void Walk(){
         System.out.println("walk in many ways");
     }
     public abstract void eat();
    }
public class Spider extends Animal{
    public Spider(){
        super();
        System.out.println("spider is created");
    }

    @Override
    public void eat() {
        System.out.println("spider eat other insects");
    }
}
public class Cat extends Animal implements Pet{

    public void setName(String name){
        Pet.super.setName(name);

    }


    public Cat(){
        System.out.println("cat is created");
    }

    public void play(){
        System.out.println("cat plays with yarn");
    }

    @Override
    public void eat() {
        System.out.println("cat eat catfood");
    }
}
public interface Pet {
    String name;
    public String getName(){
        return name;
    }
    public void setName(String name){
        this.name=name;
    }
}
public class Fish extends Animal implements Pet{
    public Fish(){
        System.out.println("fish is created");
    }

    @Override
    public void Walk() {
        super.Walk();
    }

    @Override
    public void eat() {

    }
    public void play(){
        System.out.println("fish plays with ball");
    }
}
public class Main {
    public static void main(String[] args) {

    }
}
